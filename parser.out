Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOSTROPHE
    COMA
    COMENTARIOS
    DOSPUNTOS
    FALSE
    FOR
    HASHTAG
    MASXDOS
    PRINT
    QUOTES
    TRUE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> FUNCION ID LPAREN RPAREN LBLOCK declaracionLista RBLOCK
Rule 2     declaracionLista -> declaracionLista declaration
Rule 3     declaracionLista -> declaration
Rule 4     declaration -> tipo ID PUNTOCOMA
Rule 5     declaration -> ID IGUAL var PUNTOCOMA
Rule 6     declaration -> tipo ID IGUAL var PUNTOCOMA
Rule 7     declaration -> if_condicion
Rule 8     declaration -> var PUNTOCOMA
Rule 9     declaration -> do_condicion
Rule 10    declaration -> while_condition
Rule 11    declaration -> tipo ID IGUAL expression PUNTOCOMA
Rule 12    declaration -> ID IGUAL expression PUNTOCOMA
Rule 13    declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA
Rule 14    declaration -> ID IGUAL expression_avanced PUNTOCOMA
Rule 15    expression -> var MAS var
Rule 16    expression -> var MENOS var
Rule 17    expression -> var MULT var
Rule 18    expression -> var DIVIDIR var
Rule 19    expression_avanced -> var MAS LPAREN expression RPAREN
Rule 20    expression_avanced -> var MENOS LPAREN expression RPAREN
Rule 21    expression_avanced -> var MULT LPAREN expression RPAREN
Rule 22    expression_avanced -> var DIVIDIR LPAREN expression RPAREN
Rule 23    expression_bool -> var IGUALXDOS var
Rule 24    expression_bool -> var MENOR var
Rule 25    expression_bool -> var MAYOR var
Rule 26    expression_bool -> var MAYORIGUALQ var
Rule 27    expression_bool -> var MENORIGUALQ var
Rule 28    if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
Rule 29    if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
Rule 30    do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
Rule 31    while_condition -> <empty>
Rule 32    while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
Rule 33    tipo -> VAR
Rule 34    var -> ID
Rule 35    var -> NUMERO
Rule 36    var -> CADENA

Terminals, with rules where they appear

APOSTROPHE           : 
CADENA               : 36
COMA                 : 
COMENTARIOS          : 
DIVIDIR              : 18 22
DO                   : 30
DOSPUNTOS            : 
ELSE                 : 29
FALSE                : 
FOR                  : 
FUNCION              : 1
HASHTAG              : 
ID                   : 1 4 5 6 11 12 13 14 34
IF                   : 28 29
IGUAL                : 5 6 11 12 13 14
IGUALXDOS            : 23
LBLOCK               : 1 28 29 29 30 32
LPAREN               : 1 19 20 21 22 28 29 30 32
MAS                  : 15 19
MASXDOS              : 
MAYOR                : 25
MAYORIGUALQ          : 26
MENOR                : 24
MENORIGUALQ          : 27
MENOS                : 16 20
MULT                 : 17 21
NUMERO               : 35
PRINT                : 
PUNTOCOMA            : 4 5 6 8 11 12 13 14
QUOTES               : 
RBLOCK               : 1 28 29 29 30 32
RPAREN               : 1 19 20 21 22 28 29 30 32
TRUE                 : 
VAR                  : 33
WHILE                : 30 32
error                : 

Nonterminals, with rules where they appear

declaracionLista     : 1 2 28 29 29 30 32
declaration          : 2 3
do_condicion         : 9
expression           : 11 12 19 20 21 22
expression_avanced   : 13 14
expression_bool      : 28 29 30 32
if_condicion         : 7
programa             : 0
tipo                 : 4 6 11 13
var                  : 5 6 8 15 15 16 16 17 17 18 18 19 20 21 22 23 23 24 24 25 25 26 26 27 27
while_condition      : 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . FUNCION ID LPAREN RPAREN LBLOCK declaracionLista RBLOCK

    FUNCION         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> FUNCION . ID LPAREN RPAREN LBLOCK declaracionLista RBLOCK

    ID              shift and go to state 3


state 3

    (1) programa -> FUNCION ID . LPAREN RPAREN LBLOCK declaracionLista RBLOCK

    LPAREN          shift and go to state 4


state 4

    (1) programa -> FUNCION ID LPAREN . RPAREN LBLOCK declaracionLista RBLOCK

    RPAREN          shift and go to state 5


state 5

    (1) programa -> FUNCION ID LPAREN RPAREN . LBLOCK declaracionLista RBLOCK

    LBLOCK          shift and go to state 6


state 6

    (1) programa -> FUNCION ID LPAREN RPAREN LBLOCK . declaracionLista RBLOCK
    (2) declaracionLista -> . declaracionLista declaration
    (3) declaracionLista -> . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    RBLOCK          reduce using rule 31 (while_condition -> .)
    WHILE           shift and go to state 20

  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaracionLista               shift and go to state 8
    declaration                    shift and go to state 9
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 7

    (5) declaration -> ID . IGUAL var PUNTOCOMA
    (12) declaration -> ID . IGUAL expression PUNTOCOMA
    (14) declaration -> ID . IGUAL expression_avanced PUNTOCOMA
    (34) var -> ID .

    IGUAL           shift and go to state 21
    PUNTOCOMA       reduce using rule 34 (var -> ID .)


state 8

    (1) programa -> FUNCION ID LPAREN RPAREN LBLOCK declaracionLista . RBLOCK
    (2) declaracionLista -> declaracionLista . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBLOCK          shift and go to state 22
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    WHILE           shift and go to state 20

  ! RBLOCK          [ reduce using rule 31 (while_condition -> .) ]
  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaration                    shift and go to state 23
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 9

    (3) declaracionLista -> declaration .

    RBLOCK          reduce using rule 3 (declaracionLista -> declaration .)
    ID              reduce using rule 3 (declaracionLista -> declaration .)
    VAR             reduce using rule 3 (declaracionLista -> declaration .)
    IF              reduce using rule 3 (declaracionLista -> declaration .)
    NUMERO          reduce using rule 3 (declaracionLista -> declaration .)
    CADENA          reduce using rule 3 (declaracionLista -> declaration .)
    DO              reduce using rule 3 (declaracionLista -> declaration .)
    WHILE           reduce using rule 3 (declaracionLista -> declaration .)


state 10

    (4) declaration -> tipo . ID PUNTOCOMA
    (6) declaration -> tipo . ID IGUAL var PUNTOCOMA
    (11) declaration -> tipo . ID IGUAL expression PUNTOCOMA
    (13) declaration -> tipo . ID IGUAL expression_avanced PUNTOCOMA

    ID              shift and go to state 24


state 11

    (8) declaration -> var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 25


state 12

    (7) declaration -> if_condicion .

    RBLOCK          reduce using rule 7 (declaration -> if_condicion .)
    ID              reduce using rule 7 (declaration -> if_condicion .)
    VAR             reduce using rule 7 (declaration -> if_condicion .)
    IF              reduce using rule 7 (declaration -> if_condicion .)
    NUMERO          reduce using rule 7 (declaration -> if_condicion .)
    CADENA          reduce using rule 7 (declaration -> if_condicion .)
    DO              reduce using rule 7 (declaration -> if_condicion .)
    WHILE           reduce using rule 7 (declaration -> if_condicion .)


state 13

    (9) declaration -> do_condicion .

    RBLOCK          reduce using rule 9 (declaration -> do_condicion .)
    ID              reduce using rule 9 (declaration -> do_condicion .)
    VAR             reduce using rule 9 (declaration -> do_condicion .)
    IF              reduce using rule 9 (declaration -> do_condicion .)
    NUMERO          reduce using rule 9 (declaration -> do_condicion .)
    CADENA          reduce using rule 9 (declaration -> do_condicion .)
    DO              reduce using rule 9 (declaration -> do_condicion .)
    WHILE           reduce using rule 9 (declaration -> do_condicion .)


state 14

    (10) declaration -> while_condition .

    RBLOCK          reduce using rule 10 (declaration -> while_condition .)
    ID              reduce using rule 10 (declaration -> while_condition .)
    VAR             reduce using rule 10 (declaration -> while_condition .)
    IF              reduce using rule 10 (declaration -> while_condition .)
    NUMERO          reduce using rule 10 (declaration -> while_condition .)
    CADENA          reduce using rule 10 (declaration -> while_condition .)
    DO              reduce using rule 10 (declaration -> while_condition .)
    WHILE           reduce using rule 10 (declaration -> while_condition .)


state 15

    (33) tipo -> VAR .

    ID              reduce using rule 33 (tipo -> VAR .)


state 16

    (28) if_condicion -> IF . LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> IF . LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK

    LPAREN          shift and go to state 26


state 17

    (35) var -> NUMERO .

    PUNTOCOMA       reduce using rule 35 (var -> NUMERO .)
    MAS             reduce using rule 35 (var -> NUMERO .)
    MENOS           reduce using rule 35 (var -> NUMERO .)
    MULT            reduce using rule 35 (var -> NUMERO .)
    DIVIDIR         reduce using rule 35 (var -> NUMERO .)
    IGUALXDOS       reduce using rule 35 (var -> NUMERO .)
    MENOR           reduce using rule 35 (var -> NUMERO .)
    MAYOR           reduce using rule 35 (var -> NUMERO .)
    MAYORIGUALQ     reduce using rule 35 (var -> NUMERO .)
    MENORIGUALQ     reduce using rule 35 (var -> NUMERO .)
    RPAREN          reduce using rule 35 (var -> NUMERO .)


state 18

    (36) var -> CADENA .

    PUNTOCOMA       reduce using rule 36 (var -> CADENA .)
    MAS             reduce using rule 36 (var -> CADENA .)
    MENOS           reduce using rule 36 (var -> CADENA .)
    MULT            reduce using rule 36 (var -> CADENA .)
    DIVIDIR         reduce using rule 36 (var -> CADENA .)
    IGUALXDOS       reduce using rule 36 (var -> CADENA .)
    MENOR           reduce using rule 36 (var -> CADENA .)
    MAYOR           reduce using rule 36 (var -> CADENA .)
    MAYORIGUALQ     reduce using rule 36 (var -> CADENA .)
    MENORIGUALQ     reduce using rule 36 (var -> CADENA .)
    RPAREN          reduce using rule 36 (var -> CADENA .)


state 19

    (30) do_condicion -> DO . LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN

    LBLOCK          shift and go to state 27


state 20

    (32) while_condition -> WHILE . LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

    LPAREN          shift and go to state 28


state 21

    (5) declaration -> ID IGUAL . var PUNTOCOMA
    (12) declaration -> ID IGUAL . expression PUNTOCOMA
    (14) declaration -> ID IGUAL . expression_avanced PUNTOCOMA
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (19) expression_avanced -> . var MAS LPAREN expression RPAREN
    (20) expression_avanced -> . var MENOS LPAREN expression RPAREN
    (21) expression_avanced -> . var MULT LPAREN expression RPAREN
    (22) expression_avanced -> . var DIVIDIR LPAREN expression RPAREN

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 30
    expression                     shift and go to state 31
    expression_avanced             shift and go to state 32

state 22

    (1) programa -> FUNCION ID LPAREN RPAREN LBLOCK declaracionLista RBLOCK .

    $end            reduce using rule 1 (programa -> FUNCION ID LPAREN RPAREN LBLOCK declaracionLista RBLOCK .)


state 23

    (2) declaracionLista -> declaracionLista declaration .

    RBLOCK          reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    ID              reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    VAR             reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    IF              reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    NUMERO          reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    CADENA          reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    DO              reduce using rule 2 (declaracionLista -> declaracionLista declaration .)
    WHILE           reduce using rule 2 (declaracionLista -> declaracionLista declaration .)


state 24

    (4) declaration -> tipo ID . PUNTOCOMA
    (6) declaration -> tipo ID . IGUAL var PUNTOCOMA
    (11) declaration -> tipo ID . IGUAL expression PUNTOCOMA
    (13) declaration -> tipo ID . IGUAL expression_avanced PUNTOCOMA

    PUNTOCOMA       shift and go to state 33
    IGUAL           shift and go to state 34


state 25

    (8) declaration -> var PUNTOCOMA .

    RBLOCK          reduce using rule 8 (declaration -> var PUNTOCOMA .)
    ID              reduce using rule 8 (declaration -> var PUNTOCOMA .)
    VAR             reduce using rule 8 (declaration -> var PUNTOCOMA .)
    IF              reduce using rule 8 (declaration -> var PUNTOCOMA .)
    NUMERO          reduce using rule 8 (declaration -> var PUNTOCOMA .)
    CADENA          reduce using rule 8 (declaration -> var PUNTOCOMA .)
    DO              reduce using rule 8 (declaration -> var PUNTOCOMA .)
    WHILE           reduce using rule 8 (declaration -> var PUNTOCOMA .)


state 26

    (28) if_condicion -> IF LPAREN . expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> IF LPAREN . expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (23) expression_bool -> . var IGUALXDOS var
    (24) expression_bool -> . var MENOR var
    (25) expression_bool -> . var MAYOR var
    (26) expression_bool -> . var MAYORIGUALQ var
    (27) expression_bool -> . var MENORIGUALQ var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    expression_bool                shift and go to state 35
    var                            shift and go to state 36

state 27

    (30) do_condicion -> DO LBLOCK . declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (2) declaracionLista -> . declaracionLista declaration
    (3) declaracionLista -> . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    RBLOCK          reduce using rule 31 (while_condition -> .)
    WHILE           shift and go to state 20

  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaracionLista               shift and go to state 37
    declaration                    shift and go to state 9
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 28

    (32) while_condition -> WHILE LPAREN . expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (23) expression_bool -> . var IGUALXDOS var
    (24) expression_bool -> . var MENOR var
    (25) expression_bool -> . var MAYOR var
    (26) expression_bool -> . var MAYORIGUALQ var
    (27) expression_bool -> . var MENORIGUALQ var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    expression_bool                shift and go to state 38
    var                            shift and go to state 36

state 29

    (34) var -> ID .

    PUNTOCOMA       reduce using rule 34 (var -> ID .)
    MAS             reduce using rule 34 (var -> ID .)
    MENOS           reduce using rule 34 (var -> ID .)
    MULT            reduce using rule 34 (var -> ID .)
    DIVIDIR         reduce using rule 34 (var -> ID .)
    IGUALXDOS       reduce using rule 34 (var -> ID .)
    MENOR           reduce using rule 34 (var -> ID .)
    MAYOR           reduce using rule 34 (var -> ID .)
    MAYORIGUALQ     reduce using rule 34 (var -> ID .)
    MENORIGUALQ     reduce using rule 34 (var -> ID .)
    RPAREN          reduce using rule 34 (var -> ID .)


state 30

    (5) declaration -> ID IGUAL var . PUNTOCOMA
    (15) expression -> var . MAS var
    (16) expression -> var . MENOS var
    (17) expression -> var . MULT var
    (18) expression -> var . DIVIDIR var
    (19) expression_avanced -> var . MAS LPAREN expression RPAREN
    (20) expression_avanced -> var . MENOS LPAREN expression RPAREN
    (21) expression_avanced -> var . MULT LPAREN expression RPAREN
    (22) expression_avanced -> var . DIVIDIR LPAREN expression RPAREN

    PUNTOCOMA       shift and go to state 39
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULT            shift and go to state 42
    DIVIDIR         shift and go to state 43


state 31

    (12) declaration -> ID IGUAL expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 44


state 32

    (14) declaration -> ID IGUAL expression_avanced . PUNTOCOMA

    PUNTOCOMA       shift and go to state 45


state 33

    (4) declaration -> tipo ID PUNTOCOMA .

    RBLOCK          reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    ID              reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    VAR             reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    IF              reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    NUMERO          reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    CADENA          reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    DO              reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)
    WHILE           reduce using rule 4 (declaration -> tipo ID PUNTOCOMA .)


state 34

    (6) declaration -> tipo ID IGUAL . var PUNTOCOMA
    (11) declaration -> tipo ID IGUAL . expression PUNTOCOMA
    (13) declaration -> tipo ID IGUAL . expression_avanced PUNTOCOMA
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (19) expression_avanced -> . var MAS LPAREN expression RPAREN
    (20) expression_avanced -> . var MENOS LPAREN expression RPAREN
    (21) expression_avanced -> . var MULT LPAREN expression RPAREN
    (22) expression_avanced -> . var DIVIDIR LPAREN expression RPAREN

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 46
    expression                     shift and go to state 47
    expression_avanced             shift and go to state 48

state 35

    (28) if_condicion -> IF LPAREN expression_bool . RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> IF LPAREN expression_bool . RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK

    RPAREN          shift and go to state 49


state 36

    (23) expression_bool -> var . IGUALXDOS var
    (24) expression_bool -> var . MENOR var
    (25) expression_bool -> var . MAYOR var
    (26) expression_bool -> var . MAYORIGUALQ var
    (27) expression_bool -> var . MENORIGUALQ var

    IGUALXDOS       shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MAYORIGUALQ     shift and go to state 53
    MENORIGUALQ     shift and go to state 54


state 37

    (30) do_condicion -> DO LBLOCK declaracionLista . RBLOCK WHILE LPAREN expression_bool RPAREN
    (2) declaracionLista -> declaracionLista . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBLOCK          shift and go to state 55
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    WHILE           shift and go to state 20

  ! RBLOCK          [ reduce using rule 31 (while_condition -> .) ]
  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaration                    shift and go to state 23
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 38

    (32) while_condition -> WHILE LPAREN expression_bool . RPAREN LBLOCK declaracionLista RBLOCK

    RPAREN          shift and go to state 56


state 39

    (5) declaration -> ID IGUAL var PUNTOCOMA .

    RBLOCK          reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    ID              reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    VAR             reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    IF              reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    NUMERO          reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    CADENA          reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    DO              reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)
    WHILE           reduce using rule 5 (declaration -> ID IGUAL var PUNTOCOMA .)


state 40

    (15) expression -> var MAS . var
    (19) expression_avanced -> var MAS . LPAREN expression RPAREN
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    LPAREN          shift and go to state 58
    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 57

state 41

    (16) expression -> var MENOS . var
    (20) expression_avanced -> var MENOS . LPAREN expression RPAREN
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    LPAREN          shift and go to state 60
    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 59

state 42

    (17) expression -> var MULT . var
    (21) expression_avanced -> var MULT . LPAREN expression RPAREN
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    LPAREN          shift and go to state 62
    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 61

state 43

    (18) expression -> var DIVIDIR . var
    (22) expression_avanced -> var DIVIDIR . LPAREN expression RPAREN
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    LPAREN          shift and go to state 64
    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 63

state 44

    (12) declaration -> ID IGUAL expression PUNTOCOMA .

    RBLOCK          reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    ID              reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    VAR             reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    IF              reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    NUMERO          reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    CADENA          reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    DO              reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)
    WHILE           reduce using rule 12 (declaration -> ID IGUAL expression PUNTOCOMA .)


state 45

    (14) declaration -> ID IGUAL expression_avanced PUNTOCOMA .

    RBLOCK          reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    ID              reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    VAR             reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    IF              reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    NUMERO          reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    CADENA          reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    DO              reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)
    WHILE           reduce using rule 14 (declaration -> ID IGUAL expression_avanced PUNTOCOMA .)


state 46

    (6) declaration -> tipo ID IGUAL var . PUNTOCOMA
    (15) expression -> var . MAS var
    (16) expression -> var . MENOS var
    (17) expression -> var . MULT var
    (18) expression -> var . DIVIDIR var
    (19) expression_avanced -> var . MAS LPAREN expression RPAREN
    (20) expression_avanced -> var . MENOS LPAREN expression RPAREN
    (21) expression_avanced -> var . MULT LPAREN expression RPAREN
    (22) expression_avanced -> var . DIVIDIR LPAREN expression RPAREN

    PUNTOCOMA       shift and go to state 65
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULT            shift and go to state 42
    DIVIDIR         shift and go to state 43


state 47

    (11) declaration -> tipo ID IGUAL expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 66


state 48

    (13) declaration -> tipo ID IGUAL expression_avanced . PUNTOCOMA

    PUNTOCOMA       shift and go to state 67


state 49

    (28) if_condicion -> IF LPAREN expression_bool RPAREN . LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> IF LPAREN expression_bool RPAREN . LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK

    LBLOCK          shift and go to state 68


state 50

    (23) expression_bool -> var IGUALXDOS . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 69

state 51

    (24) expression_bool -> var MENOR . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 70

state 52

    (25) expression_bool -> var MAYOR . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 71

state 53

    (26) expression_bool -> var MAYORIGUALQ . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 72

state 54

    (27) expression_bool -> var MENORIGUALQ . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 73

state 55

    (30) do_condicion -> DO LBLOCK declaracionLista RBLOCK . WHILE LPAREN expression_bool RPAREN

    WHILE           shift and go to state 74


state 56

    (32) while_condition -> WHILE LPAREN expression_bool RPAREN . LBLOCK declaracionLista RBLOCK

    LBLOCK          shift and go to state 75


state 57

    (15) expression -> var MAS var .

    PUNTOCOMA       reduce using rule 15 (expression -> var MAS var .)
    RPAREN          reduce using rule 15 (expression -> var MAS var .)


state 58

    (19) expression_avanced -> var MAS LPAREN . expression RPAREN
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 76
    expression                     shift and go to state 77

state 59

    (16) expression -> var MENOS var .

    PUNTOCOMA       reduce using rule 16 (expression -> var MENOS var .)
    RPAREN          reduce using rule 16 (expression -> var MENOS var .)


state 60

    (20) expression_avanced -> var MENOS LPAREN . expression RPAREN
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 76
    expression                     shift and go to state 78

state 61

    (17) expression -> var MULT var .

    PUNTOCOMA       reduce using rule 17 (expression -> var MULT var .)
    RPAREN          reduce using rule 17 (expression -> var MULT var .)


state 62

    (21) expression_avanced -> var MULT LPAREN . expression RPAREN
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 76
    expression                     shift and go to state 79

state 63

    (18) expression -> var DIVIDIR var .

    PUNTOCOMA       reduce using rule 18 (expression -> var DIVIDIR var .)
    RPAREN          reduce using rule 18 (expression -> var DIVIDIR var .)


state 64

    (22) expression_avanced -> var DIVIDIR LPAREN . expression RPAREN
    (15) expression -> . var MAS var
    (16) expression -> . var MENOS var
    (17) expression -> . var MULT var
    (18) expression -> . var DIVIDIR var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 76
    expression                     shift and go to state 80

state 65

    (6) declaration -> tipo ID IGUAL var PUNTOCOMA .

    RBLOCK          reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    ID              reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    VAR             reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    IF              reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    NUMERO          reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    CADENA          reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    DO              reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)
    WHILE           reduce using rule 6 (declaration -> tipo ID IGUAL var PUNTOCOMA .)


state 66

    (11) declaration -> tipo ID IGUAL expression PUNTOCOMA .

    RBLOCK          reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    ID              reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    VAR             reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    IF              reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    NUMERO          reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    CADENA          reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    DO              reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)
    WHILE           reduce using rule 11 (declaration -> tipo ID IGUAL expression PUNTOCOMA .)


state 67

    (13) declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .

    RBLOCK          reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    ID              reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    VAR             reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    IF              reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    NUMERO          reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    CADENA          reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    DO              reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)
    WHILE           reduce using rule 13 (declaration -> tipo ID IGUAL expression_avanced PUNTOCOMA .)


state 68

    (28) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK . declaracionLista RBLOCK
    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK . declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (2) declaracionLista -> . declaracionLista declaration
    (3) declaracionLista -> . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    RBLOCK          reduce using rule 31 (while_condition -> .)
    WHILE           shift and go to state 20

  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaracionLista               shift and go to state 81
    declaration                    shift and go to state 9
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 69

    (23) expression_bool -> var IGUALXDOS var .

    RPAREN          reduce using rule 23 (expression_bool -> var IGUALXDOS var .)


state 70

    (24) expression_bool -> var MENOR var .

    RPAREN          reduce using rule 24 (expression_bool -> var MENOR var .)


state 71

    (25) expression_bool -> var MAYOR var .

    RPAREN          reduce using rule 25 (expression_bool -> var MAYOR var .)


state 72

    (26) expression_bool -> var MAYORIGUALQ var .

    RPAREN          reduce using rule 26 (expression_bool -> var MAYORIGUALQ var .)


state 73

    (27) expression_bool -> var MENORIGUALQ var .

    RPAREN          reduce using rule 27 (expression_bool -> var MENORIGUALQ var .)


state 74

    (30) do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE . LPAREN expression_bool RPAREN

    LPAREN          shift and go to state 82


state 75

    (32) while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK . declaracionLista RBLOCK
    (2) declaracionLista -> . declaracionLista declaration
    (3) declaracionLista -> . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    RBLOCK          reduce using rule 31 (while_condition -> .)
    WHILE           shift and go to state 20

  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaracionLista               shift and go to state 83
    declaration                    shift and go to state 9
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 76

    (15) expression -> var . MAS var
    (16) expression -> var . MENOS var
    (17) expression -> var . MULT var
    (18) expression -> var . DIVIDIR var

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVIDIR         shift and go to state 87


state 77

    (19) expression_avanced -> var MAS LPAREN expression . RPAREN

    RPAREN          shift and go to state 88


state 78

    (20) expression_avanced -> var MENOS LPAREN expression . RPAREN

    RPAREN          shift and go to state 89


state 79

    (21) expression_avanced -> var MULT LPAREN expression . RPAREN

    RPAREN          shift and go to state 90


state 80

    (22) expression_avanced -> var DIVIDIR LPAREN expression . RPAREN

    RPAREN          shift and go to state 91


state 81

    (28) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista . RBLOCK
    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista . RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (2) declaracionLista -> declaracionLista . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBLOCK          shift and go to state 92
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    WHILE           shift and go to state 20

  ! RBLOCK          [ reduce using rule 31 (while_condition -> .) ]
  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaration                    shift and go to state 23
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 82

    (30) do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN . expression_bool RPAREN
    (23) expression_bool -> . var IGUALXDOS var
    (24) expression_bool -> . var MENOR var
    (25) expression_bool -> . var MAYOR var
    (26) expression_bool -> . var MAYORIGUALQ var
    (27) expression_bool -> . var MENORIGUALQ var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    expression_bool                shift and go to state 93
    var                            shift and go to state 36

state 83

    (32) while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista . RBLOCK
    (2) declaracionLista -> declaracionLista . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBLOCK          shift and go to state 94
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    WHILE           shift and go to state 20

  ! RBLOCK          [ reduce using rule 31 (while_condition -> .) ]
  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaration                    shift and go to state 23
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 84

    (15) expression -> var MAS . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 57

state 85

    (16) expression -> var MENOS . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 59

state 86

    (17) expression -> var MULT . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 61

state 87

    (18) expression -> var DIVIDIR . var
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA

    ID              shift and go to state 29
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18

    var                            shift and go to state 63

state 88

    (19) expression_avanced -> var MAS LPAREN expression RPAREN .

    PUNTOCOMA       reduce using rule 19 (expression_avanced -> var MAS LPAREN expression RPAREN .)


state 89

    (20) expression_avanced -> var MENOS LPAREN expression RPAREN .

    PUNTOCOMA       reduce using rule 20 (expression_avanced -> var MENOS LPAREN expression RPAREN .)


state 90

    (21) expression_avanced -> var MULT LPAREN expression RPAREN .

    PUNTOCOMA       reduce using rule 21 (expression_avanced -> var MULT LPAREN expression RPAREN .)


state 91

    (22) expression_avanced -> var DIVIDIR LPAREN expression RPAREN .

    PUNTOCOMA       reduce using rule 22 (expression_avanced -> var DIVIDIR LPAREN expression RPAREN .)


state 92

    (28) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .
    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK . ELSE LBLOCK declaracionLista RBLOCK

    RBLOCK          reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    ID              reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    VAR             reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    IF              reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    NUMERO          reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    CADENA          reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    DO              reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    WHILE           reduce using rule 28 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    ELSE            shift and go to state 95


state 93

    (30) do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool . RPAREN

    RPAREN          shift and go to state 96


state 94

    (32) while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .

    RBLOCK          reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    ID              reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    VAR             reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    IF              reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    NUMERO          reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    CADENA          reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    DO              reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)
    WHILE           reduce using rule 32 (while_condition -> WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK .)


state 95

    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE . LBLOCK declaracionLista RBLOCK

    LBLOCK          shift and go to state 97


state 96

    (30) do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .

    RBLOCK          reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    ID              reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    VAR             reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    IF              reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    NUMERO          reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    CADENA          reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    DO              reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)
    WHILE           reduce using rule 30 (do_condicion -> DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN .)


state 97

    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK . declaracionLista RBLOCK
    (2) declaracionLista -> . declaracionLista declaration
    (3) declaracionLista -> . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    RBLOCK          reduce using rule 31 (while_condition -> .)
    WHILE           shift and go to state 20

  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaracionLista               shift and go to state 98
    declaration                    shift and go to state 9
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 98

    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista . RBLOCK
    (2) declaracionLista -> declaracionLista . declaration
    (4) declaration -> . tipo ID PUNTOCOMA
    (5) declaration -> . ID IGUAL var PUNTOCOMA
    (6) declaration -> . tipo ID IGUAL var PUNTOCOMA
    (7) declaration -> . if_condicion
    (8) declaration -> . var PUNTOCOMA
    (9) declaration -> . do_condicion
    (10) declaration -> . while_condition
    (11) declaration -> . tipo ID IGUAL expression PUNTOCOMA
    (12) declaration -> . ID IGUAL expression PUNTOCOMA
    (13) declaration -> . tipo ID IGUAL expression_avanced PUNTOCOMA
    (14) declaration -> . ID IGUAL expression_avanced PUNTOCOMA
    (33) tipo -> . VAR
    (28) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK
    (29) if_condicion -> . IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK
    (34) var -> . ID
    (35) var -> . NUMERO
    (36) var -> . CADENA
    (30) do_condicion -> . DO LBLOCK declaracionLista RBLOCK WHILE LPAREN expression_bool RPAREN
    (31) while_condition -> .
    (32) while_condition -> . WHILE LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBLOCK          shift and go to state 99
    ID              shift and go to state 7
    VAR             shift and go to state 15
    IF              shift and go to state 16
    NUMERO          shift and go to state 17
    CADENA          shift and go to state 18
    DO              shift and go to state 19
    WHILE           shift and go to state 20

  ! RBLOCK          [ reduce using rule 31 (while_condition -> .) ]
  ! ID              [ reduce using rule 31 (while_condition -> .) ]
  ! VAR             [ reduce using rule 31 (while_condition -> .) ]
  ! IF              [ reduce using rule 31 (while_condition -> .) ]
  ! NUMERO          [ reduce using rule 31 (while_condition -> .) ]
  ! CADENA          [ reduce using rule 31 (while_condition -> .) ]
  ! DO              [ reduce using rule 31 (while_condition -> .) ]
  ! WHILE           [ reduce using rule 31 (while_condition -> .) ]

    declaration                    shift and go to state 23
    tipo                           shift and go to state 10
    var                            shift and go to state 11
    if_condicion                   shift and go to state 12
    do_condicion                   shift and go to state 13
    while_condition                shift and go to state 14

state 99

    (29) if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .

    RBLOCK          reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    ID              reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    VAR             reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    IF              reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    NUMERO          reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    CADENA          reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    DO              reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)
    WHILE           reduce using rule 29 (if_condicion -> IF LPAREN expression_bool RPAREN LBLOCK declaracionLista RBLOCK ELSE LBLOCK declaracionLista RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for IF in state 6 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 6 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 6 resolved as shift
WARNING: shift/reduce conflict for DO in state 6 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 6 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 8 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for VAR in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 27 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 27 resolved as shift
WARNING: shift/reduce conflict for DO in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for VAR in state 37 resolved as shift
WARNING: shift/reduce conflict for IF in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 37 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 37 resolved as shift
WARNING: shift/reduce conflict for DO in state 37 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 68 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 75 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 81 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 83 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 97 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 97 resolved as shift
WARNING: shift/reduce conflict for DO in state 97 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 97 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 98 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 98 resolved as shift
WARNING: shift/reduce conflict for DO in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 98 resolved as shift
